// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Monitoring for mobile phones' moves",
    "title": "Spy API",
    "version": "1.0.0"
  },
  "basePath": "/ourell",
  "paths": {
    "/bbfastDrive": {
      "post": {
        "description": "Returns users who exceeds the speed on public roads. Request is used by DAI.",
        "summary": "Returns phone numbers of fast drivers",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "from",
                "to"
              ],
              "properties": {
                "from": {
                  "$ref": "#/definitions/Timestamp"
                },
                "maxLen": {
                  "description": "Maximum length",
                  "type": "integer",
                  "format": "int32"
                },
                "maxLocation": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "description": "Latitude in degrees",
                      "type": "number",
                      "format": "float",
                      "maximum": 90,
                      "minimum": -90
                    },
                    "longitude": {
                      "description": "Longitude in degrees",
                      "type": "number",
                      "format": "float",
                      "maximum": 180,
                      "minimum": -180
                    }
                  }
                },
                "minLocation": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "description": "Latitude in degrees",
                      "type": "number",
                      "format": "float",
                      "maximum": 90,
                      "minimum": -90
                    },
                    "longitude": {
                      "description": "Longitude in degrees",
                      "type": "number",
                      "format": "float",
                      "maximum": 180,
                      "minimum": -180
                    }
                  }
                },
                "minSpped": {
                  "description": "Minimum speed in km/h",
                  "type": "integer",
                  "format": "int32"
                },
                "to": {
                  "$ref": "#/definitions/Timestamp"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "phones": {
                  "description": "Phone numbers",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid arguments",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "General server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/bbinput": {
      "post": {
        "summary": "Accepts GPS coordinates from the mobile and saves them to the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "number",
                "imei",
                "coordinates"
              ],
              "properties": {
                "coordinates": {
                  "description": "GPS coordinates of the phone's location",
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "description": "Latitude in degrees",
                      "type": "number",
                      "format": "float",
                      "maximum": 90,
                      "minimum": -90
                    },
                    "longitude": {
                      "description": "Longitude in degrees",
                      "type": "number",
                      "format": "float",
                      "maximum": 180,
                      "minimum": -180
                    }
                  }
                },
                "imei": {
                  "description": "Device identificator",
                  "type": "string"
                },
                "ip": {
                  "description": "Optional IP address",
                  "type": "string"
                },
                "number": {
                  "$ref": "#/definitions/Number"
                },
                "timestamp": {
                  "$ref": "#/definitions/Timestamp"
                }
              },
              "example": {
                "coordinates": [
                  22.1832284135991,
                  60.4538416572538
                ],
                "imei": "502507345219189",
                "ip": "35.25.21.123",
                "number": "+380991926482",
                "timestamp": "2019/03/22-15:50:20"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid arguments",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "General server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/bbs": {
      "post": {
        "summary": "Shows how much time two phones are located in the same room",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "number1",
                "number2",
                "from",
                "to",
                "minDistance"
              ],
              "properties": {
                "from": {
                  "$ref": "#/definitions/Timestamp"
                },
                "minDistance": {
                  "description": "Distance in meters. Maximum value is Earth equator.",
                  "type": "number",
                  "format": "int32",
                  "maximum": 40008000,
                  "minimum": 0
                },
                "number1": {
                  "$ref": "#/definitions/Number"
                },
                "number2": {
                  "$ref": "#/definitions/Number"
                },
                "to": {
                  "$ref": "#/definitions/Timestamp"
                }
              },
              "example": {
                "from": "2019/03/22-15:50:20",
                "minDistance": 10,
                "number1": "+380991926482",
                "number2": "+380923403424",
                "to": "2020/03/22-15:50:20"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "percentage": {
                  "description": "The percentage of off-hours that people spend together (excluding the interval from 9 to 18). Value is in range [0, 100].",
                  "type": "number",
                  "format": "int32",
                  "maximum": 100,
                  "minimum": 0
                }
              }
            }
          },
          "400": {
            "description": "Invalid arguments",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "General server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Number": {
      "description": "Phone number",
      "type": "string"
    },
    "Timestamp": {
      "description": "EET timestamp in \"YYYY/MM/DD-hh:mm:ss\" format",
      "type": "string"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Monitoring for mobile phones' moves",
    "title": "Spy API",
    "version": "1.0.0"
  },
  "basePath": "/ourell",
  "paths": {
    "/bbfastDrive": {
      "post": {
        "description": "Returns users who exceeds the speed on public roads. Request is used by DAI.",
        "summary": "Returns phone numbers of fast drivers",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "from",
                "to"
              ],
              "properties": {
                "from": {
                  "$ref": "#/definitions/Timestamp"
                },
                "maxLen": {
                  "description": "Maximum length",
                  "type": "integer",
                  "format": "int32"
                },
                "maxLocation": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "description": "Latitude in degrees",
                      "type": "number",
                      "format": "float",
                      "maximum": 90,
                      "minimum": -90
                    },
                    "longitude": {
                      "description": "Longitude in degrees",
                      "type": "number",
                      "format": "float",
                      "maximum": 180,
                      "minimum": -180
                    }
                  }
                },
                "minLocation": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "description": "Latitude in degrees",
                      "type": "number",
                      "format": "float",
                      "maximum": 90,
                      "minimum": -90
                    },
                    "longitude": {
                      "description": "Longitude in degrees",
                      "type": "number",
                      "format": "float",
                      "maximum": 180,
                      "minimum": -180
                    }
                  }
                },
                "minSpped": {
                  "description": "Minimum speed in km/h",
                  "type": "integer",
                  "format": "int32"
                },
                "to": {
                  "$ref": "#/definitions/Timestamp"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "phones": {
                  "description": "Phone numbers",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid arguments",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "General server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/bbinput": {
      "post": {
        "summary": "Accepts GPS coordinates from the mobile and saves them to the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "number",
                "imei",
                "coordinates"
              ],
              "properties": {
                "coordinates": {
                  "description": "GPS coordinates of the phone's location",
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "description": "Latitude in degrees",
                      "type": "number",
                      "format": "float",
                      "maximum": 90,
                      "minimum": -90
                    },
                    "longitude": {
                      "description": "Longitude in degrees",
                      "type": "number",
                      "format": "float",
                      "maximum": 180,
                      "minimum": -180
                    }
                  }
                },
                "imei": {
                  "description": "Device identificator",
                  "type": "string"
                },
                "ip": {
                  "description": "Optional IP address",
                  "type": "string"
                },
                "number": {
                  "$ref": "#/definitions/Number"
                },
                "timestamp": {
                  "$ref": "#/definitions/Timestamp"
                }
              },
              "example": {
                "coordinates": [
                  22.1832284135991,
                  60.4538416572538
                ],
                "imei": "502507345219189",
                "ip": "35.25.21.123",
                "number": "+380991926482",
                "timestamp": "2019/03/22-15:50:20"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid arguments",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "General server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/bbs": {
      "post": {
        "summary": "Shows how much time two phones are located in the same room",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "number1",
                "number2",
                "from",
                "to",
                "minDistance"
              ],
              "properties": {
                "from": {
                  "$ref": "#/definitions/Timestamp"
                },
                "minDistance": {
                  "description": "Distance in meters. Maximum value is Earth equator.",
                  "type": "number",
                  "format": "int32",
                  "maximum": 40008000,
                  "minimum": 0
                },
                "number1": {
                  "$ref": "#/definitions/Number"
                },
                "number2": {
                  "$ref": "#/definitions/Number"
                },
                "to": {
                  "$ref": "#/definitions/Timestamp"
                }
              },
              "example": {
                "from": "2019/03/22-15:50:20",
                "minDistance": 10,
                "number1": "+380991926482",
                "number2": "+380923403424",
                "to": "2020/03/22-15:50:20"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "percentage": {
                  "description": "The percentage of off-hours that people spend together (excluding the interval from 9 to 18). Value is in range [0, 100].",
                  "type": "number",
                  "format": "int32",
                  "maximum": 100,
                  "minimum": 0
                }
              }
            }
          },
          "400": {
            "description": "Invalid arguments",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "General server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Number": {
      "description": "Phone number",
      "type": "string"
    },
    "Timestamp": {
      "description": "EET timestamp in \"YYYY/MM/DD-hh:mm:ss\" format",
      "type": "string"
    }
  }
}`))
}
